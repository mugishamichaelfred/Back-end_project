// User routes and swagger
/**
 * @swagger
 * /signup:
 *   post:
 *     summary: Register a new user
 *     description: Create a new user in the system
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               username:
 *                 type: string
 *               email:
 *                 type: string
 *               location:
 *                 type: string
 *               gender:
 *                 type: string
 *               phoneNumber:
 *                 type: string
 *               password:
 *                 type: string
 *               confirmPassword:
 *                 type: string
 *     responses:
 *       201:
 *         description: User created successfully
 *       400:
 *         description: Invalid input or user already exists
 *       500:
 *         description: Internal server error
 */


/**
 * @swagger
 * /login:
 *   post:
 *     summary: Login to the system
 *     description: Authenticate the user and return a JWT token
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               email:
 *                 type: string
 *               password:
 *                 type: string
 *     responses:
 *       200:
 *         description: Login successful with JWT token
 *       400:
 *         description: Invalid email or password
 *       500:
 *         description: Internal server error
 */


/**
 * @swagger
 * /users:
 *   get:
 *     summary: Get all users
 *     description: Fetch a list of all users in the system
 *     responses:
 *       200:
 *         description: A list of users
 *         content:
 *           application/json:
 *             schema:
 *               type: array
 *               items:
 *                 type: object
 *                 properties:
 *                   username:
 *                     type: string
 *                   email:
 *                     type: string
 *                   location:
 *                     type: string
 *                   gender:
 *                     type: string
 *                   phoneNumber:
 *                     type: string
 *       500:
 *         description: Internal server error
 */


/**
 * @swagger
 * /updateUser:
 *   put:
 *     summary: Update user details
 *     description: Update the details of an existing user
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               username:
 *                 type: string
 *               email:
 *                 type: string
 *               location:
 *                 type: string
 */


/**
 * @swagger
 * /deleteUser:
 *   delete:
 *     summary: Delete a user
 *     description: Remove a user from the system
 *     parameters:
 *       - in: query
 *         name: userId
 *         required: true
 *         description: ID of the user to delete
 *         schema:
 *           type: string
 *     responses:
 *       200:
 *         description: User deleted successfully
 *       400:
 *         description: Invalid user ID
 *       500:
 *         description: Internal server error
 */



// Found item routes
/**
 * @swagger
 * /foundIt:
 *   post:
 *     summary: Create a new found item
 *     description: Report a found item
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               foundName:
 *                 type: string
 *               foundEmail:
 *                 type: string
 *               phoneNumber:
 *                 type: string
 *               itemName:
 *                 type: string
 *               itemImage:
 *                 type: string
 *               itemSerialNumber:
 *                 type: string
 *               location:
 *                 type: string
 *               description:
 *                 type: string
 *               dateFound:
 *                 type: string
 *                 format: date
 */


/**
 * @swagger
 * /foundItems:
 *   get:
 *     summary: Get all found items
 *     description: Fetch a list of all found items in the system
 *     responses:
 *       200:
 *         description: A list of found items
 *         content:
 *           application/json:
 *             schema:
 *               type: array
 *               items:
 *                 type: object
 *                 properties:
 *                   foundName:
 *                     type: string
 *                   foundEmail:
 *                     type: string
 *                   phoneNumber:
 *                     type: string
 *                   itemName:
 *                     type: string
 *                   itemImage:
 *                     type: string
 *                   itemSerialNumber:
 *                     type: string
 *                   location:
 *                     type: string
 *                   description:
 *                     type: string
 *                   dateFound:
 *                     type: string
 *                     format: date
 */


/**
 * @swagger
 * /updateFoundItem:
 *   put:
 *     summary: Update a found item
 *     description: Update the details of a found item
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               foundName:
 *                 type: string
 *               foundEmail:
 *                 type: string
 *               phoneNumber:
 *                 type: string
 *               itemName:
 *                 type: string
 *               itemImage:
 *                 type: string
 *               itemSerialNumber:
 *                 type: string
 *               location:
 *                 type: string
 *               description:
 *                 type: string
 *               dateFound:
 *                 type: string
 *                 format: date
 */

/**
 * @swagger
 * /deleteFoundItem:
 *   delete:
 *     summary: Delete a found item
 *     description: Remove a found item from the system
 *     parameters:
 *       - in: query
 *         name: itemId
 *         required: true
 *         description: ID of the found item to delete
 *         schema:
 *           type: string
 *     responses:
 *       200:
 *         description: Found item deleted successfully
 *       400:
 *         description: Invalid item ID
 *       500:
 *         description: Internal server error
 */

// Lost item routes
/**
 * @swagger
 * /lostIt:
 *   post:
 *     summary: Create a new lost item
 *     description: Report a lost item
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               lostName:
 *                 type: string
 *               lostEmail:
 *                 type: string
 *               phoneNumber:
 *                 type: string
 *               itemName:
 *                 type: string
 *               itemImage:
 *                 type: string
 *               itemSerialNumber:
 *                 type: string
 *               location:
 *                 type: string
 *               description:
 *                 type: string
 *               dateLost:
 *                 type: string
 *                 format: date
 *     responses:
 *       201:
 *         description: Lost item reported successfully
 *       400:
 *         description: Invalid input or item already exists
 *       500:
 *         description: Internal server error
 */

/**
 * @swagger
 * /lostItem:
 *   get:
 *     summary: Get all lost items
 *     description: Fetch a list of all lost items in the system
 *     responses:
 *       200:
 *         description: A list of lost items
 *         content:
 *           application/json:
 *             schema:
 *               type: array
 *               items:
 *                 type: object
 *                 properties:
 *                   lostName:
 *                     type: string
 *                   lostEmail:
 *                     type: string
 *                   phoneNumber:
 *                     type: string
 *                   itemName:
 *                     type: string
 *                   itemImage:
 *                     type: string
 *                   itemSerialNumber:
 *                     type: string
 *                   location:
 *                     type: string
 *                   description:
 *                     type: string
 *                   dateLost:
 *                     type: string
 *                     format: date
 */

/**
 * @swagger
 * /updateLostItem:
 *   put:
 *     summary: Update a lost item
 *     description: Update the details of a lost item
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               lostName:
 *                 type: string
 *               lostEmail:
 *                 type: string
 *               phoneNumber:
 *                 type: string
 *               itemName:
 *                 type: string
 *               itemImage:
 *                 type: string
 *               itemSerialNumber:
 *                 type: string
 *               location:
 *                 type: string
 *               description:
 *                 type: string
 *               dateLost:
 *                 type: string
 *                 format: date
 */

/**
 * @swagger
 * /deleteLostItem:
 *   delete:
 *     summary: Delete a lost item
 *     description: Remove a lost item from the system
 *     parameters:
 *       - in: query
 *         name: itemId
 *         required: true
 *         description: ID of the lost item to delete
 *         schema:
 *           type: string
 *     responses:
 *       200:
 *         description: Lost item deleted successfully
 *       400:
 *         description: Invalid item ID
 *       500:
 *         description: Internal server error
 */

// Contact us route
/**
 * @swagger
 * /contact:
 *   post:
 *     summary: Contact us
 *     description: Send a message to the support team
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               name:
 *                 type: string
 *               email:
 *                 type: string
 *               message:
 *                 type: string
 *     responses:
 *       201:
 *         description: Message sent successfully
 *       400:
 *         description: Invalid input
 *       500:
 *         description: Internal server error
 */

/**
 * @swagger
 * /getContact:
 *   get:
 *     summary: Get all contact messages
 *     description: Fetch a list of all contact messages
 *     responses:
 *       200:
 *         description: A list of contact messages
 *         content:
 *           application/json:
 *             schema:
 *               type: array
 *               items:
 *                 type: object
 *                 properties:
 *                   name:
 *                     type: string
 *                   email:
 *                     type: string
 *                   message:
 *                     type: string
 */

/**
 * @swagger
 * /deleteContact:
 *   delete:
 *     summary: Delete a contact message
 *     description: Remove a contact message from the system
 *     parameters:
 *       - in: query
 *         name: messageId
 *         required: true
 *         description: ID of the contact message to delete
 *         schema:
 *           type: string
 *     responses:
 *       200:
 *         description: Contact message deleted successfully
 *       400:
 *         description: Invalid message ID
 *       500:
 *         description: Internal server error
 */
