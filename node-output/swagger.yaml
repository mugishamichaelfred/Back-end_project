{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "User and Item Management API",
    "description" : "API for user registration, login, and item management",
    "version" : "3.0.0-oas3"
  },
  "servers" : [ {
    "url" : "/"
  } ],
  "paths" : {
    "/signup" : {
      "post" : {
        "summary" : "Register a new user",
        "description" : "Create a new user in the system",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/signup_body"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "User created successfully"
          },
          "400" : {
            "description" : "Invalid input or user already exists"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/login" : {
      "post" : {
        "summary" : "Login to the system",
        "description" : "Authenticate the user and return a JWT token",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/login_body"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Login successful with JWT token"
          },
          "400" : {
            "description" : "Invalid email or password"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/users" : {
      "get" : {
        "summary" : "Get all users",
        "description" : "Fetch a list of all users in the system",
        "responses" : {
          "200" : {
            "description" : "A list of users",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/inline_response_200"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/updateUser" : {
      "put" : {
        "summary" : "Update user details",
        "description" : "Update the details of an existing user",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/updateUser_body"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "User details updated successfully"
          },
          "400" : {
            "description" : "Invalid input"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/deleteUser" : {
      "delete" : {
        "summary" : "Delete a user",
        "description" : "Remove a user from the system",
        "parameters" : [ {
          "name" : "userId",
          "in" : "query",
          "description" : "ID of the user to delete",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "User deleted successfully"
          },
          "400" : {
            "description" : "Invalid user ID"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/foundIt" : {
      "post" : {
        "summary" : "Create a new found item",
        "description" : "Report a found item",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/foundIt_body"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Found item reported successfully"
          },
          "400" : {
            "description" : "Invalid input or item already exists"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/foundItems" : {
      "get" : {
        "summary" : "Get all found items",
        "description" : "Fetch a list of all found items in the system",
        "responses" : {
          "200" : {
            "description" : "A list of found items",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/foundIt_body"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/updateFoundItem" : {
      "put" : {
        "summary" : "Update a found item",
        "description" : "Update the details of a found item",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/updateFoundItem_body"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Found item updated successfully"
          },
          "400" : {
            "description" : "Invalid input"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/deleteFoundItem" : {
      "delete" : {
        "summary" : "Delete a found item",
        "description" : "Remove a found item from the system",
        "parameters" : [ {
          "name" : "itemId",
          "in" : "query",
          "description" : "ID of the found item to delete",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Found item deleted successfully"
          },
          "400" : {
            "description" : "Invalid item ID"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/lostIt" : {
      "post" : {
        "summary" : "Create a new lost item",
        "description" : "Report a lost item",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/lostIt_body"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Lost item reported successfully"
          },
          "400" : {
            "description" : "Invalid input or item already exists"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/lostItem" : {
      "get" : {
        "summary" : "Get all lost items",
        "description" : "Fetch a list of all lost items in the system",
        "responses" : {
          "200" : {
            "description" : "A list of lost items",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/lostIt_body"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/updateLostItem" : {
      "put" : {
        "summary" : "Update a lost item",
        "description" : "Update the details of a lost item",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/updateLostItem_body"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Lost item updated successfully"
          },
          "400" : {
            "description" : "Invalid input"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/deleteLostItem" : {
      "delete" : {
        "summary" : "Delete a lost item",
        "description" : "Remove a lost item from the system",
        "parameters" : [ {
          "name" : "itemId",
          "in" : "query",
          "description" : "ID of the lost item to delete",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Lost item deleted successfully"
          },
          "400" : {
            "description" : "Invalid item ID"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/contact" : {
      "post" : {
        "summary" : "Contact us",
        "description" : "Send a message to the support team",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/contact_body"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Message sent successfully"
          },
          "400" : {
            "description" : "Invalid input"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/getContact" : {
      "get" : {
        "summary" : "Get all contact messages",
        "description" : "Fetch a list of all contact messages",
        "responses" : {
          "200" : {
            "description" : "A list of contact messages",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/contact_body"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/deleteContact" : {
      "delete" : {
        "summary" : "Delete a contact message",
        "description" : "Remove a contact message from the system",
        "parameters" : [ {
          "name" : "messageId",
          "in" : "query",
          "description" : "ID of the contact message to delete",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Contact message deleted successfully"
          },
          "400" : {
            "description" : "Invalid message ID"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "signup_body" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          },
          "gender" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "confirmPassword" : {
            "type" : "string"
          }
        }
      },
      "login_body" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        }
      },
      "inline_response_200" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          },
          "gender" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "type" : "string"
          }
        }
      },
      "updateUser_body" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          }
        }
      },
      "foundIt_body" : {
        "type" : "object",
        "properties" : {
          "foundName" : {
            "type" : "string"
          },
          "foundEmail" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "type" : "string"
          },
          "itemName" : {
            "type" : "string"
          },
          "itemImage" : {
            "type" : "string"
          },
          "itemSerialNumber" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "dateFound" : {
            "type" : "string",
            "format" : "date"
          }
        }
      },
      "updateFoundItem_body" : {
        "type" : "object",
        "properties" : {
          "foundName" : {
            "type" : "string"
          },
          "foundEmail" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "type" : "string"
          },
          "itemName" : {
            "type" : "string"
          },
          "itemImage" : {
            "type" : "string"
          },
          "itemSerialNumber" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "dateFound" : {
            "type" : "string",
            "format" : "date"
          }
        }
      },
      "lostIt_body" : {
        "type" : "object",
        "properties" : {
          "lostName" : {
            "type" : "string"
          },
          "lostEmail" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "type" : "string"
          },
          "itemName" : {
            "type" : "string"
          },
          "itemImage" : {
            "type" : "string"
          },
          "itemSerialNumber" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "dateLost" : {
            "type" : "string",
            "format" : "date"
          }
        }
      },
      "updateLostItem_body" : {
        "type" : "object",
        "properties" : {
          "lostName" : {
            "type" : "string"
          },
          "lostEmail" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "type" : "string"
          },
          "itemName" : {
            "type" : "string"
          },
          "itemImage" : {
            "type" : "string"
          },
          "itemSerialNumber" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "dateLost" : {
            "type" : "string",
            "format" : "date"
          }
        }
      },
      "contact_body" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        }
      }
    }
  }
}